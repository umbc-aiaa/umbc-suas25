
[{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"The Gita XI 12 communicates with the ground station using the MAVLink (Micro Air Vehicle Link) protocol.\nMAVLink is a lightweight, long ranged and open source communication protocol used in drones and unmanned vehicles. A unique advantage this protocol presents is its bi-directional communication capabilities. This allows the ground control station to send radio controls to manually pilot the aerial unit while receiving live time telemetry data such as air speed, altitude, pitch, distance travelled, GPS etc at the same time. The signal strength is constantly monitored by a heartbeat protocol, which is used to advertise the existence of a system on the MAVLink network, along with its system and component id, vehicle type, flight stack, component type, and flight mode (Mavlink np).\nThe Mavlink Long Range Signal (MAVLink LRS) is the radio system that allows communication through the MAVLink protocol over long distances (10km - 100km). The Mateksys Transmitter and Receiver modules used in the GITA XI 12 utilizes the LoRa (Long Range) hardware to achieve this range. MLRS supports full-duplex (bi-directional) connection. Therefore, even though the aerial and ground units are traditionally called receivers and transmitters consecutively, both essentially are transceivers.\nMavlink is used on this aircraft instead of other communication systems because it provides long range stable and bidirectional connection allowing both RC controls and telemetry communication to happen using the same equipment. Mavlink additionally provides more safety in case of accidental communication issues. For example, if the Ground Control System (GCS) connection is lost, the manual controls remain unaffected and the GCS is able to recover telemetry without restarting the flight controller. Usage of the specific hardware on the Gita XI 12 also allows wireless connection between the transmitter and the GCS, keeping navigation uncomplicated for the safety pilot.\n","externalUrl":null,"permalink":"/development/communications/","section":"Development","summary":"","title":"Communications","type":"development"},{"content":"","externalUrl":null,"permalink":"/development/","section":"Development","summary":"","title":"Development","type":"development"},{"content":"Hey!!!\n","externalUrl":null,"permalink":"/documentation/","section":"Documentation","summary":"","title":"Documentation","type":"documentation"},{"content":" Introduction # When selecting electronic components for our plane, we wanted to make sure that they worked over the entire range of the flight while also being easy to configure. When selecting our motors, we wanted to optimize both power and range. Therefore, we focused on having reliable testing infrastructure in this competition year.\nFlight Controller # For our plane this year, we realized that it would be easier to select our avionics components like servos and other sensors first, and select a flight controller(FC) that supports all of our required equipment on the plane. Therefore, we first brainstormed a list of components we wanted the FC to support which included:\n- ELRS Reciever - Telemetry Radio - GPS - Object avoidance electronics - Landing electronics - Controls surface servo ports - Aileron - Flaps - Tails - Steerable landing gear - Kill Switch - Throttle - FPV Camera - Airspeed Sensor(s) We also wanted our FC to be price-efficient, so we considered several options that fit our general requirements:\n- Pix32 v6 - Holybro Pixhawk4 - Pixhawk 6C - Kakute H743 Wing - iFlight BLITZ Wing H743 - Mateksys H743-Wing - SpeedyBeeF405WING We ended up choosing the Mateksys H743-Wing for its wide availability of ports for the aforementioned requirements, and its great compatibility with Ardupilot.\nMotor Selection # Our approach to motor selection this year was a fair bit more involved this year because we wanted to accurately model motor performance in flight. For this, we would need some way of testing the dynamic thrust of motors. We did not have the budget of a full-blown wind-tunnel, so we instead build a rig and software stack that would allow us to the motors on a car.\nThe motor test stand was designed to mount on top of the car, and we designed a custom electronics package that uses an Arduino ESP-32 Nano board to measure the voltage and current pulled by the motors and wirelessly communicates with a laptop.\n","externalUrl":null,"permalink":"/development/electronics/","section":"Development","summary":"","title":"Electronics","type":"development"},{"content":" We are a team of motivated engineers seeking to apply our knowledge to solve real-world problems.\n","externalUrl":null,"permalink":"/","section":"Home","summary":"","title":"Home","type":"page"},{"content":" With the flight readiness review just two weeks away, and the previous rear landing gear broken, the team needed to ensure the next rear landing gear does not fail. 32 layers of plain weave carbon fiber were laid on a smooth glass surface, and laminated with slow-cure resin. A 3D printed mold was assembled, and layers of plastic, breather fabric, and perforated release film were added. The wet carbon fiber were laid into the mold, and the mold was clamped shut. After 48 hours of curing, the mold was opened. The mold came off cleanly, and no excess epoxy was left in the landing gear.\nSeveral steps had to be done to get the landing gear ready. First, the numerous sharp edges and corners had to be cut off. A metal bandsaw was used to cut the landing gear outside, while constantly utilizing a vacuum to suck away harmful carbon fiber dust. Holes were made to fit two 4\u0026quot; wheels on the sides, and 4 holes in the core to mount to the fuselage. The most important and thrilling part of the production was, of course, the testing. The rear landing gear must be capable of surviving hard emergency landings. The project lead intern volunteered to test: applying his full body weight onto the rear landing gear, hard sharp sounds were heard. Those were the sounds of the landing gear deforming to hold the weight; deforming to sustain 140 pounds of force without damage. The team successfully verified that the minimum maximum load capacity of the rear landing gear is 140 pounds; 7 times greater than the weight of the aircraft. The true maximum is yet to be found.\n","externalUrl":null,"permalink":"/development/landing-gear/","section":"Development","summary":"","title":"Landing Gear","type":"development"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":" The flight on April 25th was Gita\u0026rsquo;s very first flight, as well as its first crash. After a successful completion of autotune, the switch to FBWA mode resulted in a rapid descent with no ability for climb. Numerous theories were brought up:\nFBWA controls were poorly tuned resulting an inadequate pitch up. The elevator surface area was too low to begin with. The foam horizontal stabilizer failed in air. The servo extensions disconnected. None of the above theories successfully explained the crash. The log files showed the FBWA responding properly. The elevator surface area was adequate for takeoff. The foam horizontal stabilizer was intact after the crash. The servo extensions were verified working, and an additional servo was placed for the elevator for redundancy. The team went on to rebuild the fuselage and the tail surfaces. In this process, the fuselage and tail were both made stronger with more support structures. In the third flight attempt, the aircraft successfully took off and did not seem to have any issues with the pitch. It was almost as if the cause of the crash spontaneously disappeared. However, throughout the flight, the roll authority felt a bit off: it would oscillate in FBWA mode, despite the roll being tuned.\nWhile going through the team\u0026rsquo;s safety checklist, one of the aileron servos was discovered to malfunction: it would work only intermittently. Sometimes, the elevator would also fail to work. Only after calling the flight off and taking the flight controller off the plane was the problem discovered: poorly soldered joints. Several of the servo pins, particularly those connected to aileron and elevator, lacked solder.\nResoldering the joints, Gita XI 12 took off again, this time with no roll nor pitch issues.\n","externalUrl":null,"permalink":"/development/the-maiden-flight/","section":"Development","summary":"","title":"The Maidien Flight(And Crash)","type":"development"},{"content":"","externalUrl":null,"permalink":"/authors/turibius-rozario/","section":"Authors","summary":"","title":"Turibius Rozario","type":"authors"}]